openapi: '3.0.2'
info:
  title: Website Update (SSE or Websocket)
  version: '1.0'
servers:
  - url: https://api.server.test/v1
paths:
  /events:
    get:
      tags:
        - update
      summary: Receives updates from the back-end about the order.
      description: Receives updates from the back-end about the order.
      operationId: events
      requestBody:
        description: Get order status events
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
        required: true
      responses:
        '200':
          description: OK
components:
  schemas:
    Order:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: cab5d2c8-506f-4d5a-8cee-696f6374e7b5
        customer:
          schema:
          $ref: '#/components/schemas/Customer'
        orderItems:
          type: array
          items:
            schema:
            $ref: '#/components/schemas/OrderItem'
        orderDate:
          type: string
          format: date-time
          example: '2023-01-30T00:00:00.000Z'
        status:
          schema:
          $ref: '#/components/schemas/Status'
          example: placed
      xml:
        name: order
    Customer:
      type: object
      properties:
        name:
          type: string
          example: Alex
        email:
          type: string
          format: email
          example: alex@ishungry.io
    OrderItem:
      type: object
      properties:
        pizzaType:
          schema:
          $ref: '#/components/schemas/PizzaType'
          example: pepperoni
        amount:
          type: integer
          format: int32
          example: 1
    PizzaType:
      type: string
      enum:
        - pepperoni
        - margherita
        - hawaiian
        - vegetarian
    Status:
      type: string
      enum:
        - placed
        - instock
        - notinstock
        - inpreparation
        - completed
