openapi: '3.0.2'
info:
  title: Restaurant Service
  version: '1.0'
servers:
  - url: https://api.server.test/v1
paths:
  /prepare:
    post:
      tags:
        - order
      summary: Instructs the restaurant to prepare the order
      description: Instructs the restaurant to prepare the order
      operationId: prepareOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
        required: true
      responses:
        '200':
          description: Order successfully received
components:
  schemas:
    Order:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: cab5d2c8-506f-4d5a-8cee-696f6374e7b5
        customer:
          schema:
          $ref: '#/components/schemas/Customer'
        pizzaType:
          schema:
          $ref: '#/components/schemas/PizzaType'
          example: pepperoni
        orderDate:
          type: string
          format: date-time
          example: '2023-01-30T00:00:00.000Z'
        status:
          schema:
          $ref: '#/components/schemas/Status'
          example: placed
      xml:
        name: order
    Customer:
      type: object
      properties:
        name:
          type: string
          example: Alex
        email:
          type: string
          format: email
          example: alex@ishungry.io
    PizzaType:
      type: string
      enum:
        - pepperoni
        - margherita
        - hawaiian
        - hot pepper
    Status:
      type: string
      enum:
        - placed
        - instock
        - notinstock
        - inpreparation
        - completed
